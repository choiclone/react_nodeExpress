[{"D:\\01. a\\react_nodeExpress\\demo\\src\\index.js":"1","D:\\01. a\\react_nodeExpress\\demo\\src\\App.js":"2","D:\\01. a\\react_nodeExpress\\demo\\src\\reportWebVitals.js":"3","D:\\react_nodeExpress\\demo\\src\\index.js":"4","D:\\react_nodeExpress\\demo\\src\\reportWebVitals.js":"5","D:\\react_nodeExpress\\demo\\src\\App.js":"6","D:\\react_nodeExpress\\demo\\src\\list\\StationList.jsx":"7","D:\\react_nodeExpress\\demo\\src\\list\\StationListF.jsx":"8","D:\\react_nodeExpress\\demo\\src\\script\\KakaoMapScript.js":"9","D:\\react_nodeExpress\\demo\\src\\list\\StationArriveBusInfo.jsx":"10","D:\\react_nodeExpress\\demo\\src\\busInfo\\BusStationList.jsx":"11","D:\\react_nodeExpress\\demo\\src\\busInfo\\BusArriveList.jsx":"12","D:\\react_nodeExpress\\demo\\src\\script\\useInterval.js":"13","D:\\react_nodeExpress\\demo\\src\\script\\BusRouteModal.js":"14","D:\\react_nodeExpress\\demo\\src\\search\\BusRouteSearch.js":"15","D:\\react_nodeExpress\\demo\\src\\search\\BusStationSearch.js":"16","D:\\react_nodeExpress\\demo\\src\\module\\consonantSearch.js":"17"},{"size":535,"mtime":1652838784552,"results":"18","hashOfConfig":"19"},{"size":1582,"mtime":1652933431733,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1652838784675,"results":"21","hashOfConfig":"19"},{"size":442,"mtime":1654844065229,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1653014409772,"results":"24","hashOfConfig":"23"},{"size":665,"mtime":1654563505040,"results":"25","hashOfConfig":"23"},{"size":519,"mtime":1653528798670,"results":"26","hashOfConfig":"23"},{"size":1108,"mtime":1654567548315,"results":"27","hashOfConfig":"23"},{"size":5936,"mtime":1654824976015,"results":"28","hashOfConfig":"23"},{"size":1603,"mtime":1653958004268,"results":"29","hashOfConfig":"23"},{"size":4958,"mtime":1654769291894,"results":"30","hashOfConfig":"23"},{"size":3474,"mtime":1653971866099,"results":"31","hashOfConfig":"23"},{"size":534,"mtime":1653960037187,"results":"32","hashOfConfig":"23"},{"size":1611,"mtime":1653973229663,"results":"33","hashOfConfig":"23"},{"size":8743,"mtime":1655101903844,"results":"34","hashOfConfig":"23"},{"size":4921,"mtime":1655101641400,"results":"35","hashOfConfig":"23"},{"size":1451,"mtime":1655084096795,"results":"36","hashOfConfig":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13y43vh",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1nrqkqm",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\01. a\\react_nodeExpress\\demo\\src\\index.js",[],[],"D:\\01. a\\react_nodeExpress\\demo\\src\\App.js",["99","100"],[],"import logo from './logo.svg';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [getUser, setUser] = useState([]);\n\n  const clickButton = () => {\n    axios.post(\"/api/test1\", { user: \"ddd\" })\n      .then((res) => {\n        setUser(res.data)\n        console.log(getUser)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const clickButton2 = () => {\n    axios.post(\"/api/test2\", { user: \"ddd\" })\n      .then((res) => {\n        setUser(res.data)\n        console.log(getUser)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const clickButton3 = () => {\n    axios.post(\"/api/test3\")\n      .then((res) => {\n        setUser(res.data)\n        console.log(getUser)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <button type=\"button\" onClick={clickButton}>Read</button>\n          <button type=\"button\" onClick={clickButton2}>Create</button>\n          <button type=\"button\" onClick={clickButton3}>Update</button>\n        </header>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","D:\\01. a\\react_nodeExpress\\demo\\src\\reportWebVitals.js",[],[],"D:\\react_nodeExpress\\demo\\src\\index.js",[],[],[],"D:\\react_nodeExpress\\demo\\src\\reportWebVitals.js",[],[],"D:\\react_nodeExpress\\demo\\src\\App.js",[],[],"D:\\react_nodeExpress\\demo\\src\\list\\StationList.jsx",["101","102","103"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StationList = () => {\r\n  const [station, setStation] = useState('');\r\n\r\n  const handleStation = (e) => {\r\n    setStation(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <input type=\"text\" name='stationName' onChange={handleStation}></input>\r\n          { station }\r\n        </header>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StationList;","D:\\react_nodeExpress\\demo\\src\\list\\StationListF.jsx",["104","105","106","107"],[],"/*global kakao*/\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport BusRouteSearch from '../search/BusRouteSearch';\r\nimport BusStationSearch from '../search/BusStationSearch';\r\nimport axios from 'axios';\r\n\r\nconst StationListF = () => {\r\n  const [infoType, setInfoType] = useState('Bus');\r\n\r\n  const ChangeSearchInfo = (info) => {\r\n    switch (info) {\r\n      case \"Bus\": {\r\n        setInfoType(info);\r\n        break;\r\n      }\r\n      case \"Station\": {\r\n        setInfoType(info);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header className='main-header'>\r\n        <div>\r\n          <button onClick={() => ChangeSearchInfo(\"Bus\")}>버스</button>\r\n          <button onClick={() => ChangeSearchInfo(\"Station\")}>정류소</button>\r\n        </div>\r\n      </header>\r\n      <div className='main-fullScreen'>\r\n        <section className='main-content'>\r\n            {\r\n              infoType === \"Bus\" ? <BusRouteSearch /> : <BusStationSearch />\r\n            }\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StationListF;","D:\\react_nodeExpress\\demo\\src\\script\\KakaoMapScript.js",["108","109"],[],"/*global kakao*/\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst KakaoMapScript = ({ searchPlace }) => {\r\n    const busRouteType = {\r\n        \"1\": \"공항\", \"2\": \"마을\", \"3\": \"간선\", \"4\": \"지선\", \"5\": \"순환\", \"6\": \"광역\", \"7\": \"인천\", \"8\": \"경기\", \"9\": \"폐지\", \"0\": \"공용\"\r\n    }\r\n    const mapRef = useRef();\r\n    const markerRef = useRef();\r\n    const infowindowRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const container = document.getElementById('map');\r\n        const options = {\r\n            center: new kakao.maps.LatLng(37.555167, 126.970833),\r\n            level: 3,\r\n        };\r\n\r\n        mapRef.current = new kakao.maps.Map(container, options);\r\n        const map = mapRef.current;\r\n        const geocoder = new kakao.maps.services.Geocoder();\r\n        // 장소 검색 객체를 생성\r\n        const ps = new kakao.maps.services.Places();\r\n\r\n        // 키워드로 장소를 검색\r\n        ps.keywordSearch(\"서울역\", placesSearchCB);\r\n\r\n        function searchDetailAddrFromCoords(coords, callback) {\r\n            // 좌표로 법정동 상세 주소 정보를 요청합니다\r\n            geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\r\n        }\r\n\r\n        function displayMarker(place) {\r\n            // 마커를 생성하고 지도에 표시\r\n            markerRef.current = new kakao.maps.Marker({\r\n                map: map,\r\n                clickable: true,\r\n                position: new kakao.maps.LatLng(place.y, place.x)\r\n            });\r\n            let marker = markerRef.current;\r\n            kakao.maps.event.addListener(marker, 'click', () => {\r\n                searchDetailAddrFromCoords(new kakao.maps.LatLng(place.y, place.x), (result, status) => {\r\n                    if (status === kakao.maps.services.Status.OK) {\r\n                        let iwContent = '<div style=\"padding:5px; color:black;\"><span style=\"font-size:15px; font-weight:bold;\">버스 정류장 ' + String(place.arsId) + '</span><p style=\"font-size:15px;\">' +\r\n                            String(place.stationName) +\r\n                            '</p><p style=\"font-size:15px;\"><a href=\"https://map.kakao.com/link/to/' +\r\n                            String(place.stationName) + ', ' + String(place.y) + ', ' + String(place.x) +\r\n                            '\" style=\"color:blue\" target=\"_blank\">길찾기</a></p><p style=\"font-size:12px; padding:5px;\">지번번호: '\r\n                            + String(result[0].address.address_name)\r\n                            + '</p></div>';\r\n                        infowindowRef.current = new kakao.maps.InfoWindow({\r\n                            position: new kakao.maps.LatLng(place.y, place.x),\r\n                            content: iwContent,\r\n                            removable: true,\r\n                        })\r\n                        let infowindow = infowindowRef.current;\r\n\r\n                        infowindow.open(map, marker);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수\r\n        function placesSearchCB(data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n                if(searchPlace.length !== 0){\r\n                    for (let i = 0; i < searchPlace.length; i++) {\r\n                        displayMarker(searchPlace[i]);\r\n                        bounds.extend(new kakao.maps.LatLng(searchPlace[i].y, searchPlace[i].x));\r\n                    }\r\n                    // 검색된 장소 위치를 기준으로 지도 범위를 재설정\r\n                    map.setBounds(bounds);\r\n                }else{\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }, [searchPlace]);\r\n\r\n    const mapCurrent = (place, searchPlace, e) => {\r\n        e.preventDefault();\r\n        searchPlace.map((item, key) => {\r\n            document.getElementsByClassName(String(item.stationName+\"_\"+String(key)))[0].style.color=\"white\"\r\n        })\r\n        const map = mapRef.current;\r\n        let infowindow = infowindowRef.current;\r\n        if (infowindow !== undefined) {\r\n            infowindow.close();\r\n            infowindowRef.current = undefined;\r\n        }\r\n        map.setCenter(new kakao.maps.LatLng(place.y, place.x));\r\n        e.currentTarget.style.color = \"skyblue\"\r\n    }\r\n\r\n    return (\r\n        <div className='map-search-station'>\r\n            <div id=\"map\" style={{ width: '100%', height: \"350px\" }}></div>\r\n            <table className='map-station-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>정류소 명</th>\r\n                        <th>정류소 고유번호</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id=\"stationId\">\r\n                    {\r\n                        searchPlace.map((item, key) => (\r\n                            <tr key={key}>\r\n                                <td className={String(item.stationName)+\"_\"+String(key)} onClick={(e) => mapCurrent(item, searchPlace, e)}>{item.stationName}</td>\r\n                                <td><Link to=\"/BusInfo\"\r\n                                    state={{\r\n                                        stNm: item.stationName,\r\n                                        arsId: item.arsId,\r\n                                        busRouteType: busRouteType\r\n                                    }}\r\n                                >{item.arsId}</Link></td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KakaoMapScript",[],"D:\\react_nodeExpress\\demo\\src\\list\\StationArriveBusInfo.jsx",["110"],[],"import React, { useState } from 'react';\r\nimport BusStationList from '../busInfo/BusStationList';\r\nimport BusArriveList from '../busInfo/BusArriveList';\r\nimport { useLocation } from 'react-router';\r\n\r\nconst StationArriveBusInfo = () => {\r\n    const { stNm, arsId, busRouteType } = useLocation().state;\r\n    const [BusStation, setBusStation] = useState(<BusStationList arsId={arsId} busRouteType={busRouteType}></BusStationList>);\r\n\r\n    const BusInfoFunc = (infoType) => {\r\n        const infoTypes = infoType;\r\n        switch (infoTypes) {\r\n            case \"busInfo\": {\r\n                setBusStation(<BusStationList arsId={arsId} busRouteType={busRouteType}></BusStationList>);\r\n                break;\r\n            }\r\n            case \"arriveInfo\": {\r\n                setBusStation(<BusArriveList arsId={arsId} busRouteType={busRouteType}></BusArriveList>);\r\n                break;\r\n            }\r\n            default: {\r\n                alert(\"프론트앤드 에러다 미안하다\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => BusInfoFunc(\"busInfo\")}>버스 정보 목록</button>\r\n                        <button type=\"button\" onClick={() => BusInfoFunc(\"arriveInfo\")}>도착 버스 정보 목록</button>\r\n                        {BusStation}\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StationArriveBusInfo;","D:\\react_nodeExpress\\demo\\src\\busInfo\\BusStationList.jsx",["111","112","113"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BusRoutModal from '../script/BusRouteModal';\r\nimport useInterval from '../script/useInterval';\r\nimport axios from 'axios';\r\n\r\nconst BusStationList = (props) => {\r\n    const { arsId, busRouteType } = props;\r\n    const [BusStation, setBusStation] = useState([]);\r\n    const [BusRoute, setBusRoute] = useState([]);\r\n    const [stateTitle, setStateTitle] = useState('결과 없음');\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [routeId, setRouteId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        clickStationInfo();\r\n    }, []);\r\n\r\n    const clickStationInfo = async (e) => {\r\n        let BusList = [];\r\n        setStateTitle('로딩 중...');\r\n        await axios.post(\"/api/BusStationList\", { arsID: arsId })\r\n            .then((res) => {\r\n                if (res.data.code === 200) {\r\n                    BusList.push(res.data.stationList[\"ServiceResult\"][\"msgBody\"][\"itemList\"]);\r\n                    if (Array.isArray(BusList[0])) setBusStation(BusList[0])\r\n                    else setBusStation(BusList)\r\n                    setStateTitle('검색완료');\r\n                } else {\r\n                    setStateTitle('결과 없음');\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const openModal = async (routeId) => {\r\n        let BusList = [];\r\n        await axios.post(\"/api/ArrInfoByRouteList\", { busRouteId: routeId })\r\n            .then((res) => {\r\n                if (res.data.code === 200) {\r\n                    setRouteId(routeId)\r\n                    BusList.push(res.data.allRoute[\"ServiceResult\"][\"msgBody\"][\"itemList\"]);\r\n                    if (Array.isArray(BusList[0])) setBusRoute(BusList[0]);\r\n                    else setBusRoute(BusList);\r\n                    setModalOpen(true);\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    const reloadModal = async () => {\r\n        let BusList = [];\r\n        await axios.post(\"/api/ArrInfoByRouteList\", { busRouteId: routeId })\r\n            .then((res) => {\r\n                if (res.data.code === 200) {\r\n                    BusList.push(res.data.allRoute[\"ServiceResult\"][\"msgBody\"][\"itemList\"]);\r\n                    if (Array.isArray(BusList[0])) setBusRoute(BusList[0]);\r\n                    else setBusRoute(BusList);\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h2>해당 정류소에 경유하는 버스 목록/경유 버스 개수: {BusStation.length}</h2>\r\n                    {\r\n                        BusStation.length !== 0 ?\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>노선 ID</th>\r\n                                        <th>버스명</th>\r\n                                        <th>노선길이</th>\r\n                                        <th>노선유형</th>\r\n                                        <th>기점</th>\r\n                                        <th>종점</th>\r\n                                        <th>배차간격</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        BusStation.map((item, key) => (\r\n                                            <tr key={key}>\r\n                                                <td><button onClick={() => openModal(item.busRouteId[\"_text\"])}>{item.busRouteId[\"_text\"]}</button></td>\r\n                                                <td>{item.busRouteNm[\"_text\"]}</td>\r\n                                                <td>{item.length[\"_text\"]}</td>\r\n                                                <td>{busRouteType[item.busRouteType[\"_text\"]]}</td>\r\n                                                <td>{item.stBegin[\"_text\"]}</td>\r\n                                                <td>{item.stEnd[\"_text\"]}</td>\r\n                                                <td>{item.term[\"_text\"]}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            : <h5>{stateTitle}</h5>\r\n                    }\r\n                    <BusRoutModal open={modalOpen} close={closeModal} reload={reloadModal} header=\"Bus Route List\" BusRoute={BusRoute} routeId={routeId} />\r\n                </header>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BusStationList;","D:\\react_nodeExpress\\demo\\src\\busInfo\\BusArriveList.jsx",["114","115"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport useInterval from '../script/useInterval';\r\nimport axios from 'axios';\r\n\r\nconst BusArriveList = (props) => {\r\n    const { arsId, busRouteType } = props;\r\n    const [arrive, setArrive] = useState([]);\r\n    const [stateTitle, setStateTitle] = useState('결과 없음');\r\n\r\n    useEffect(() => {\r\n        ArriveBusListInfo();\r\n    }, []);\r\n\r\n    useInterval(() => {\r\n        ArriveBusListInfo();\r\n    }, 3000);\r\n\r\n    const ArriveBusListInfo = async (e) => {\r\n        let BusList = [];\r\n        setStateTitle('로딩 중...');\r\n        await axios.post(\"/api/ArriveBusList\", { arsID: arsId })\r\n            .then((res) => {\r\n                if (res.data.code === 200) {\r\n\r\n                    BusList.push(res.data.arrive[\"ServiceResult\"][\"msgBody\"][\"itemList\"]);\r\n                    if (Array.isArray(BusList[0])) {\r\n                        setArrive(BusList[0])\r\n                    } else {\r\n                        setArrive(BusList)\r\n                    }\r\n                    setStateTitle('검색완료');\r\n                } else {\r\n                    setStateTitle('결과 없음');\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h2>정류소 고유번호에 해당하는 정류소의 도착버스 정보 조회/도착 버스 개수: {arrive.length}</h2>\r\n                    {\r\n                        arrive.length !== 0 ?\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        {/* <th>노선 ID</th> */}\r\n                                        <th>버스명</th>\r\n                                        <th>정류소 명</th>\r\n                                        <td>노선 유형</td>\r\n                                        <td>방향</td>\r\n                                        <td>첫번째 도착 예정 버스</td>\r\n                                        <td>두번째 도착 예정 버스</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        arrive.map((item, key) => (\r\n                                            <tr key={key}>\r\n                                                {/* <td>{item.busRouteId[\"_text\"]}</td> */}\r\n                                                <td>{item.rtNm[\"_text\"]}</td>\r\n                                                <td>{item.stNm[\"_text\"]}</td>\r\n                                                <td>{busRouteType[item.routeType[\"_text\"]]}</td>\r\n                                                <td>{item.adirection[\"_text\"]}</td>\r\n                                                <td>{item.arrmsg1[\"_text\"]}</td>\r\n                                                <td>{item.arrmsg2[\"_text\"]}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            : <h5>{stateTitle}</h5>\r\n                    }\r\n                </header>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BusArriveList;","D:\\react_nodeExpress\\demo\\src\\script\\useInterval.js",["116","117"],[],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;","D:\\react_nodeExpress\\demo\\src\\script\\BusRouteModal.js",["118","119","120","121","122","123","124","125"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport useInterval from './useInterval';\r\nimport axios from 'axios';\r\n\r\nconst BusRouteModal = (props) => {\r\n  const { open, close, reload, header, BusRoute, routeId } = props;\r\n  const [BusRouteList, setBusRouteList] = useState([]);\r\n  const reloadImg = require('../images/reload.png')\r\n\r\n  return (\r\n    // 모달이 열릴때 openModal 클래스가 생성된다.\r\n    <div className={open ? 'openModal modal' : 'modal'}>\r\n      {open ? (\r\n        <section>\r\n          <header>\r\n            <button className=\"Reload\" onClick={reload}>\r\n              <img src={reloadImg} width=\"15px\" height={\"15px\"}></img>\r\n            </button>\r\n            {header}\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n          </header>\r\n          <main>\r\n            {\r\n              BusRoute.length !== 0 ?\r\n                <div className='BusRouteMain'>\r\n                  {BusRoute.map((item, key) => (\r\n                    <ul className='BusRouteName' key={key}>\r\n                      <li>\r\n                        {item.stNm[\"_text\"]}\r\n                        <ul className='BusRouteMsg'>\r\n                          <li>{item.arrmsg1[\"_text\"]}</li>\r\n                          <li>{item.arrmsg2[\"_text\"]}</li>\r\n                        </ul>\r\n                      </li>\r\n                    </ul>\r\n                  ))}\r\n                </div> : <h4>아무것도 모다죠?</h4>\r\n            }\r\n          </main>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusRouteModal;","D:\\react_nodeExpress\\demo\\src\\search\\BusRouteSearch.js",["126","127","128","129","130","131"],[],"D:\\react_nodeExpress\\demo\\src\\search\\BusStationSearch.js",["132","133","134","135"],[],"D:\\react_nodeExpress\\demo\\src\\module\\consonantSearch.js",[],[],{"ruleId":"136","severity":1,"message":"137","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"140","line":2,"column":38,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"140","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":44},{"ruleId":"136","severity":1,"message":"141","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},{"ruleId":"136","severity":1,"message":"142","line":1,"column":10,"nodeType":"143","messageId":"139","endLine":1,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"140","line":2,"column":38,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"141","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":13},{"ruleId":"136","severity":1,"message":"144","line":2,"column":17,"nodeType":"138","messageId":"139","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":88,"column":37,"nodeType":"147","messageId":"148","endLine":88,"endColumn":39},{"ruleId":"136","severity":1,"message":"149","line":7,"column":13,"nodeType":"138","messageId":"139","endLine":7,"endColumn":17},{"ruleId":"136","severity":1,"message":"140","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":44},{"ruleId":"136","severity":1,"message":"150","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":16,"column":8,"nodeType":"153","endLine":16,"endColumn":10,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"140","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"155","line":12,"column":8,"nodeType":"153","endLine":12,"endColumn":10,"suggestions":"156"},{"ruleId":"136","severity":1,"message":"157","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"144","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"140","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":44},{"ruleId":"136","severity":1,"message":"150","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":19},{"ruleId":"136","severity":1,"message":"141","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"136","severity":1,"message":"158","line":6,"column":50,"nodeType":"138","messageId":"139","endLine":6,"endColumn":57},{"ruleId":"136","severity":1,"message":"159","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":22},{"ruleId":"136","severity":1,"message":"160","line":7,"column":24,"nodeType":"138","messageId":"139","endLine":7,"endColumn":39},{"ruleId":"161","severity":1,"message":"162","line":17,"column":15,"nodeType":"163","endLine":17,"endColumn":65},{"ruleId":"136","severity":1,"message":"142","line":1,"column":10,"nodeType":"143","messageId":"139","endLine":1,"endColumn":15},{"ruleId":"136","severity":1,"message":"164","line":9,"column":12,"nodeType":"138","messageId":"139","endLine":9,"endColumn":22},{"ruleId":"151","severity":1,"message":"165","line":25,"column":8,"nodeType":"153","endLine":25,"endColumn":10,"suggestions":"166"},{"ruleId":"151","severity":1,"message":"167","line":28,"column":48,"nodeType":"138","endLine":28,"endColumn":55},{"ruleId":"161","severity":1,"message":"162","line":192,"column":49,"nodeType":"163","endLine":192,"endColumn":143},{"ruleId":"161","severity":1,"message":"162","line":199,"column":37,"nodeType":"163","endLine":199,"endColumn":112},{"ruleId":"136","severity":1,"message":"142","line":1,"column":10,"nodeType":"143","messageId":"139","endLine":1,"endColumn":15},{"ruleId":"136","severity":1,"message":"140","line":2,"column":38,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"168","line":14,"column":12,"nodeType":"138","messageId":"139","endLine":14,"endColumn":23},{"ruleId":"151","severity":1,"message":"169","line":20,"column":8,"nodeType":"153","endLine":20,"endColumn":10,"suggestions":"170"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'axios' is defined but never used.","'kakao' is defined but never used.","Program","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'stNm' is assigned a value but never used.","'useInterval' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clickStationInfo'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'ArriveBusListInfo'. Either include it or remove the dependency array.",["172"],"'React' is defined but never used.","'routeId' is assigned a value but never used.","'BusRouteList' is assigned a value but never used.","'setBusRouteList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'stateTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clickBus'. Either include it or remove the dependency array.",["173"],"The ref value 'IntervalRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'IntervalRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'searchTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clickBusStation'. Either include it or remove the dependency array.",["174"],{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [clickStationInfo]",{"range":"183","text":"184"},"Update the dependencies array to be: [ArriveBusListInfo]",{"range":"185","text":"186"},"Update the dependencies array to be: [clickBus]",{"range":"187","text":"188"},"Update the dependencies array to be: [clickBusStation]",{"range":"189","text":"190"},[606,608],"[clickStationInfo]",[390,392],"[ArriveBusListInfo]",[1088,1090],"[clickBus]",[788,790],"[clickBusStation]"]